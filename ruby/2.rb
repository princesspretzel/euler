# Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
# 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
# By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

def evensum(num)
  array = [1, 2]
  first = 1
  second = 2

  until array.last > num
    array << (first + second)
    first = second
    second = array.last
  end
  array.pop
  array.select {|x| x.even?}.reduce(:+)
end

evensum(4000000)

# 4613732

# def evensum(x)
#   while evens(x) <= 4000000
#     x+=1
#     sum+=evensum(evens(x))
#   end
# end

# def evens(x)
#   fib(3*x + 2)
# end

# def fib(x)
#   if x===0 || x===1
#     return x
#   else
#     return fib(x-1)+fib(x-2)
#   end
# end

# evensum(0)

# SystemStackError: stack level too deep
# from /Users/Banana/.rvm/gems/ruby-2.0.0-p247@rails4/gems/pry-0.9.12.6/lib/pry/pry_instance.rb:328
